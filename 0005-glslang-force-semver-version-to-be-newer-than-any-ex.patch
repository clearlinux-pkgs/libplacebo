From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Patrick McCarty <patrick.mccarty@intel.com>
Date: Wed, 28 Oct 2020 03:25:11 +0000
Subject: [PATCH] glslang: force semver version to be newer than any existing
 patch level

Signed-off-by: Patrick McCarty <patrick.mccarty@intel.com>
---
 src/meson.build | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/src/meson.build b/src/meson.build
index dcb8137..dd9811d 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -87,9 +87,18 @@ if glslang_found
   glslang_header_new = 'glslang/build_info.h'
 
   if cc.has_header(glslang_header_new)
-    glslang_ver = cxx.get_define('GLSLANG_VERSION_PATCH',
+    glslang_major = cxx.get_define('GLSLANG_VERSION_MAJOR',
         prefix: '#include <' + glslang_header_new + '>'
-    ).to_int()
+    )
+    glslang_minor = cxx.get_define('GLSLANG_VERSION_MINOR',
+        prefix: '#include <' + glslang_header_new + '>'
+    )
+    glslang_patch = cxx.get_define('GLSLANG_VERSION_PATCH',
+        prefix: '#include <' + glslang_header_new + '>'
+    )
+    # Set leading '1' to serve as an epoch value, since GLSLANG_PATCH_LEVEL
+    # never reached five digits.
+    glslang_ver = ('1' + glslang_major + glslang_minor + glslang_patch).to_int()
   elif cc.has_header(glslang_header_old)
     glslang_ver = cxx.get_define('GLSLANG_PATCH_LEVEL',
         prefix: '#include <' + glslang_header_old+ '>'
@@ -98,6 +107,8 @@ if glslang_found
     error('No glslang version header found?')
   endif
 
+  message('Found glslang version @0@'.format(glslang_ver))
+
   if glslang_ver >= glslang_min_ver
     # glslang must be linked against pthreads on platforms where pthreads is
     # available. Because of their horrible architecture, gcc can't do it
